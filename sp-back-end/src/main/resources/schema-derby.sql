-- Default schema is APP
SET SCHEMA U;

-- Entities Tables
CREATE TABLE SP_USER
(
    ID        INTEGER,
    USER_NAME VARCHAR(100),
    PASSWORD  VARCHAR(100),
    ACTIVE    BOOLEAN,
    CONSTRAINT PK__USER__ID PRIMARY KEY (ID)
);

CREATE TABLE SP_PROFILE
(
    ID           INTEGER,
    PROFILE_NAME VARCHAR(100),
    CONSTRAINT PK__PROFILE__ID PRIMARY KEY (ID)
);

CREATE TABLE SP_PRIVILEGE
(
    ID        INTEGER,
    PRIVILEGE VARCHAR(100),
    CONSTRAINT PK__PRIVILEGE__ID PRIMARY KEY (ID)
);

CREATE TABLE SP_FOLDER
(
    ID            INTEGER,
    NAME          VARCHAR(100),
    SYSTEM_FOLDER BOOLEAN,
    CONSTRAINT PK__FOLDER__ID PRIMARY KEY (ID)
);

CREATE TABLE SP_ORGANIZATION
(
    ID        INTEGER,
    NAME      VARCHAR(100),
    PARENT_ID INTEGER
        CONSTRAINT FK__ORGANIZATION__PARENT_ID REFERENCES SP_ORGANIZATION (ID),
    CONSTRAINT PK__ORGANIZATION__ID PRIMARY KEY (ID)
);

CREATE TABLE SP_ORGANIZATION_NESTED_SETS
(
    ID          INTEGER,
    ORG_ID      INTEGER
        CONSTRAINT FK__ORGANIZATION_NESTED_SETS__ORGANIZATION REFERENCES SP_ORGANIZATION (ID),
    LEVEL       INTEGER,
    LFT         INTEGER,
    RGT         INTEGER,
    NODE_NUMBER INTEGER,
    NODE_COUNT  INTEGER,
    SORT_PATH   VARCHAR(4000) FOR BIT DATA,
    CONSTRAINT PK__ORGANIZATION_NESTED_SETS__ID PRIMARY KEY (ID)
);

-- Join Tables
CREATE TABLE SP_USER_PROFILE
(
    USER_ID    INTEGER NOT NULL
        CONSTRAINT FK__USER_PROFILE__USER REFERENCES SP_USER (ID) ON DELETE CASCADE,
    PROFILE_ID INTEGER NOT NULL
        CONSTRAINT FK__USER_PROFILE__PROFILE REFERENCES SP_PROFILE (ID) ON DELETE CASCADE,
    CONSTRAINT PK__USER_PROFILE__USER_ID__PROFILE_ID PRIMARY KEY (USER_ID, PROFILE_ID)
);

CREATE TABLE SP_PROFILE_PRIVILEGE
(
    PROFILE_ID INTEGER NOT NULL
        CONSTRAINT FK__PROFILE_PRIVILEGE__PROFILE REFERENCES SP_PROFILE (ID) ON DELETE CASCADE,
    OP_ID      INTEGER NOT NULL
        CONSTRAINT FK__PROFILE_PRIVILEGE__PRIVILEGE REFERENCES SP_PRIVILEGE (ID) ON DELETE CASCADE,
    CONSTRAINT PK__PROFILE_PRIVILEGE__PROFILE_ID__OP_ID PRIMARY KEY (PROFILE_ID, OP_ID)
);

CREATE TABLE SP_FOLDER_USER
(
    FOLDER_ID INTEGER NOT NULL
        CONSTRAINT FK__FOLDER_USER__FOLDER REFERENCES SP_FOLDER (ID) ON DELETE CASCADE,
    USER_ID   INTEGER NOT NULL
        CONSTRAINT FK__FOLDER_USER__USER REFERENCES SP_USER (ID) ON DELETE CASCADE,
    CONSTRAINT PK__FOLDER_USER__FOLDER_ID__USER_ID PRIMARY KEY (FOLDER_ID, USER_ID)
);

CREATE TABLE SP_ORGANIZATION_USER
(
    ORGANIZATION_ID INTEGER NOT NULL
        CONSTRAINT FK__ORGANIZATION_USER__ORGANIZATION REFERENCES SP_ORGANIZATION (ID) ON DELETE CASCADE,
    USER_ID         INTEGER NOT NULL
        CONSTRAINT FK__ORGANIZATION_USER__USER REFERENCES SP_USER (ID) ON DELETE CASCADE,
    CONSTRAINT PK__ORGANIZATION_USER__ORGANIZATION_ID__USER_ID PRIMARY KEY (ORGANIZATION_ID, USER_ID)
);

-- Sequence Tables
CREATE TABLE SEQ_GENERATOR
(
    SEQ_NAME  VARCHAR(100) NOT NULL,
    SEQ_VALUE INTEGER      NOT NULL
);

-- Must have data
INSERT INTO SEQ_GENERATOR
VALUES ('PROFILE_SEQ_PK', 1),
       ('USER_SEQ_PK', 1),
       ('ORGANIZATION_SEQ_PK', 1),
       ('ORGANIZATION_NESTED_SETS_SEQ_PK', 1);

